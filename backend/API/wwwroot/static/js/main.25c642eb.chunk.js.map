{"version":3,"sources":["app/model/pagination.ts","app/api/agent.ts","app/stores/profileStore.ts","app/model/activity.ts","app/model/profile.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/CommonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationError.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/common/form/MyDateInput.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyTextArea.tsx","app/common/options/categoryOptions.ts","app/layout/LoadingComponent.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailHeader.tsx","features/activities/details/ActivityDetailInfo.tsx","features/activities/details/ActivityDetailChat.tsx","features/activities/details/ActivityDetailSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/NotFound.tsx","features/errors/TestError.tsx","features/errors/ServerError.tsx","app/common/modal/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowing.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","updateFollowing","listFollowings","usernmae","predicate","listActivities","ProfileStore","profile","loadingProfile","uploading","loading","deleting","followings","loadingFollowing","activeTab","userActivities","setActiveTab","loadProfile","runInAction","console","resposne","photo","photos","isMain","userStore","setImage","image","find","p","filter","following","activityStore","updateAttendeeFollowing","followingCount","followersCount","forEach","loadFollowings","displayName","setDisplayName","loadActivities","activities","date","Date","makeAutoObservable","reaction","Activity","Object","assign","ActivityFormValues","undefined","title","category","description","city","venue","Profile","ActivityStore","activityRegistry","Map","selectedActivity","loadingInitial","pagingParams","set","setPagingParams","pagingParam","setPredicate","value","resetPredicate","setLoadingInitial","state","axiosParams","result","setActivity","setPagination","log","selectActivity","loadActivity","getActivity","isGoing","attendees","some","isHost","hostUsername","host","x","clearActivity","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","cancelActivityToggle","isCancelled","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","format","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","UserStore","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","fixed","inverted","Container","Item","header","as","NavLink","to","exact","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","Icon","ActivityListItemAttendee","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","divided","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","placeholder","type","render","ValidationError","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","helpers","selected","setValue","MySelectInput","Select","clearable","options","d","onBlur","setTouched","MyTextArea","categoryOptions","LoadingComponent","Dimmer","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","autoComplete","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","relaxed","Extra","NotFound","Inline","primary","TestErrors","widths","baseUrl","err","message","toUpperCase","Modal","onClose","setEditMode","isCurrentUser","editMode","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","borderColr","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","withRouter","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.25c642eb.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  constructor(public pageNumber: number = 1, public pageSize: number = 2) {}\r\n}\r\n","import { PaginatedResult } from './../model/pagination';\r\nimport { Photo, UserActivity } from './../model/profile';\r\nimport { User, UserFormValues } from './../model/user';\r\nimport { store } from './../stores/store';\r\nimport { Activity, ActivityFormValues } from './../model/activity';\r\nimport axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from 'src';\r\nimport { Profile } from '../model/profile';\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === 'development') await sleep(1000);\r\n\r\n    const pagination = response.headers['pagination'];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(response.data, JSON.parse(pagination));\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config } = error.response!;\r\n\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === 'string') {\r\n          toast.error(data);\r\n        } else if (config.method === 'get' && data.errors.hasOwnProperty('id')) {\r\n          history.push('/not-found');\r\n        } else if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        toast.error('unathorized');\r\n        break;\r\n      case 404:\r\n        history.push('/not-found');\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push('/server-error');\r\n        break;\r\n    }\r\n\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) => axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>('/activities', { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) => requests.post<void>('/activities', activity),\r\n  update: (activity: ActivityFormValues) => requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>('/account'),\r\n  login: (user: UserFormValues) => requests.post<User>('/account/login', user),\r\n  register: (user: UserFormValues) => requests.post<User>('/account/register', user),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append('File', file);\r\n    return axios.post<Photo>('/photos', formData, { headers: { 'Content-type': 'multipart/form-data' } });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post<void>(`/photos/${id}/setmain`, {}),\r\n  deletePhoto: (id: string) => requests.del<void>(`/photos/${id}`),\r\n  updateProfile: (data: Partial<Profile>) => requests.put<void>(`/profiles`, data),\r\n  updateFollowing: (username: string) => requests.post<void>(`/follow/${username}`, {}),\r\n  listFollowings: (usernmae: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${usernmae}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { UserActivity } from './../model/profile';\r\nimport { store } from './store';\r\nimport { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { Photo, Profile } from '../model/profile';\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  deleting = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowing = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? 'followers' : 'following';\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.userActivities = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      var resposne = await agent.Profiles.uploadPhoto(file);\r\n      const photo = resposne.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.uploading = false));\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (id: string) => {\r\n    this.deleting = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter((p) => p.id !== id);\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.deleting = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          if (this.profile && this.profile.username === store.userStore.user?.username) {\r\n            following ? this.profile.followingCount++ : this.profile.followingCount--;\r\n          }\r\n          following ? this.profile.followersCount++ : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following ? profile.followingCount-- : profile.followingCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowing = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(this.profile!.username, predicate);\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loadingFollowing = false));\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (profile.displayName && profile.displayName !== store.userStore.user?.displayName) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadActivities = async (username: string, predicate?: string) => {\r\n    this.loading = true;\r\n    this.userActivities = [];\r\n    try {\r\n      if (this.profile) {\r\n        var activities = await agent.Profiles.listActivities(this.profile.username, predicate ?? 'future');\r\n        runInAction(() => {\r\n          activities.forEach((activity) => {\r\n            activity.date = new Date(activity.date!);\r\n            this.userActivities.push(activity);\r\n          });\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n}\r\n","import { Profile } from './profile';\r\n\r\nexport interface Activity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: string;\r\n  date: Date | null;\r\n  city: string;\r\n  venue: string;\r\n  hostUsername?: string;\r\n  isCancelled?: boolean;\r\n  isGoing: boolean;\r\n  isHost: boolean;\r\n  host?: Profile;\r\n  attendees: Profile[];\r\n}\r\n\r\nexport class Activity implements Activity {\r\n  constructor(activity: ActivityFormValues) {\r\n    Object.assign(this, activity);\r\n  }\r\n}\r\n\r\nexport class ActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = '';\r\n  category: string = '';\r\n  description: string = '';\r\n  date: Date | null = null;\r\n  city: string = '';\r\n  venue: string = '';\r\n\r\n  constructor(activity?: Activity) {\r\n    if (activity) {\r\n      this.id = activity.id;\r\n      this.title = activity.title;\r\n      this.category = activity.category;\r\n      this.description = activity.description;\r\n      this.date = activity.date;\r\n      this.venue = activity.venue;\r\n      this.city = activity.city;\r\n    }\r\n  }\r\n}\r\n","import { User } from './user';\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { Pagination, PagingParams } from './../model/pagination';\r\nimport { store } from './store';\r\nimport { Activity, ActivityFormValues } from '../model/activity';\r\nimport { makeAutoObservable, reaction, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { format } from 'date-fns';\r\nimport { Profile } from '../model/profile';\r\n\r\nexport default class ActivityStore {\r\n  activityRegistry = new Map<string, Activity>();\r\n  selectedActivity: Activity | undefined = undefined;\r\n  loadingInitial = true;\r\n  loading = false;\r\n  pagination: Pagination | null = null;\r\n  pagingParams = new PagingParams();\r\n  predicate = new Map().set('all', true);\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.pagingParams = new PagingParams();\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  setPagingParams = (pagingParam: PagingParams) => (this.pagingParams = pagingParam);\r\n\r\n  get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append('pageNumber', this.pagingParams.pageNumber.toString());\r\n    params.append('pageSize', this.pagingParams.pageSize.toString());\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === 'startDate') {\r\n        const date = (value as Date).toISOString();\r\n\r\n        params.append(key, date);\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  setPredicate = (predicate: string, value: string | Date) => {\r\n    const resetPredicate = () => {\r\n      this.predicate.forEach((value, key) => {\r\n        if (key !== 'startDate') this.predicate.delete(key);\r\n      });\r\n    };\r\n    switch (predicate) {\r\n      case 'all':\r\n        resetPredicate();\r\n        this.predicate.set('all', true);\r\n        break;\r\n      case 'isGoing':\r\n        resetPredicate();\r\n        this.predicate.set('isGoing', true);\r\n        break;\r\n      case 'isHost':\r\n        resetPredicate();\r\n        this.predicate.set('isHost', true);\r\n        break;\r\n      case 'startDate':\r\n        this.predicate.delete('startDate');\r\n        this.predicate.set('startDate', value);\r\n        break;\r\n    }\r\n  };\r\n\r\n  get activitiesByDate() {\r\n    return Array.from(this.activityRegistry.values()).sort((a, b) => a.date!.getTime() - b.date!.getTime());\r\n  }\r\n\r\n  get groupedActivities() {\r\n    return Object.entries(\r\n      this.activitiesByDate.reduce((activities, activity) => {\r\n        const date = format(activity.date!, 'dd MMM yyyy');\r\n        activities[date] = activities[date] ? [...activities[date], activity] : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: Activity[] })\r\n    );\r\n  }\r\n\r\n  setLoadingInitial = (state: boolean) => {\r\n    this.loadingInitial = state;\r\n  };\r\n\r\n  loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const result = await agent.Activities.list(this.axiosParams);\r\n\r\n      result.data.forEach((activity) => {\r\n        this.setActivity(activity);\r\n      });\r\n      this.setPagination(result.pagination);\r\n      this.setLoadingInitial(false);\r\n    } catch (error) {\r\n      console.log(error);\r\n      this.setLoadingInitial(false);\r\n    }\r\n  };\r\n\r\n  setPagination = (pagination: Pagination) => {\r\n    this.pagination = pagination;\r\n  };\r\n\r\n  selectActivity = (id: string) => {\r\n    this.selectedActivity = this.activityRegistry.get(id);\r\n  };\r\n\r\n  loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.selectedActivity = activity;\r\n      return activity;\r\n    } else {\r\n      this.loadingInitial = true;\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        this.setActivity(activity);\r\n        this.setLoadingInitial(false);\r\n        runInAction(() => {\r\n          this.selectedActivity = activity;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.setLoadingInitial(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  private setActivity = (activity: Activity) => {\r\n    const user = store.userStore.user;\r\n    if (user) {\r\n      activity.isGoing = activity.attendees!.some((a) => a.username === user.username);\r\n      activity.isHost = activity.hostUsername === user.username;\r\n      activity.host = activity.attendees?.find((x) => x.username === activity.hostUsername);\r\n    }\r\n    activity.date = new Date(activity.date!);\r\n\r\n    this.activityRegistry.set(activity.id, activity);\r\n  };\r\n\r\n  private getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  clearActivity = () => {\r\n    this.selectedActivity = undefined;\r\n  };\r\n\r\n  createActivity = async (activity: ActivityFormValues) => {\r\n    const user = store.userStore.user;\r\n    const attendee = new Profile(user!);\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const newActivity = new Activity(activity);\r\n      newActivity.hostUsername = user?.username;\r\n      newActivity.attendees = [attendee];\r\n      this.setActivity(newActivity);\r\n      runInAction(() => {\r\n        this.selectedActivity = newActivity;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  updateActivity = async (activity: ActivityFormValues) => {\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(() => {\r\n        if (activity.id) {\r\n          let updatedActivity = { ...this.getActivity(activity.id), ...activity };\r\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\r\n          this.selectedActivity = updatedActivity as Activity;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  deleteActivity = async (id: string) => {\r\n    this.loading = true;\r\n\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(() => {\r\n        this.activityRegistry.delete(id);\r\n        this.selectedActivity = undefined;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAttendance = async () => {\r\n    const user = store.userStore.user;\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        if (this.selectedActivity?.isGoing) {\r\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\r\n            (a) => a.username !== user?.username\r\n          );\r\n          this.selectedActivity.isGoing = false;\r\n        } else {\r\n          const attendee = new Profile(user!);\r\n          this.selectedActivity?.attendees?.push(attendee);\r\n          this.selectedActivity!.isGoing = true;\r\n        }\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  cancelActivityToggle = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.selectedActivity!.id);\r\n      runInAction(() => {\r\n        this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled;\r\n        this.activityRegistry.set(this.selectedActivity!.id, this.selectedActivity!);\r\n      });\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      this.loading = false;\r\n    }\r\n  };\r\n\r\n  updateAttendeeFollowing = (username: string) => {\r\n    this.activityRegistry.forEach((activity) => {\r\n      activity.attendees.forEach((attendee) => {\r\n        if (attendee.username === username) {\r\n          attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n          attendee.following = !attendee.following;\r\n        }\r\n      });\r\n    });\r\n  };\r\n}\r\n","import { history } from 'src';\r\nimport { store } from './store';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport agent from '../api/agent';\r\nimport { User, UserFormValues } from './../model/user';\r\n\r\nexport default class userStore {\r\n  user: User | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem('jwt');\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      runInAction(() => (this.user = user));\r\n      history.push('/activities');\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n}\r\n","import ProfileStore from './profileStore';\r\nimport { createContext, useContext } from 'react';\r\nimport ActivityStore from './activityStore';\r\nimport CommonStore from './CommonStore';\r\nimport ModalStore from './modalStore';\r\nimport UserStore from './userStore';\r\nimport CommentStore from './commentStore';\r\n\r\ninterface Store {\r\n  activityStore: ActivityStore;\r\n  commonStore: CommonStore;\r\n  userStore: UserStore;\r\n  modalStore: ModalStore;\r\n  profileStore: ProfileStore;\r\n  commentStore: CommentStore;\r\n}\r\n\r\nexport const store: Store = {\r\n  activityStore: new ActivityStore(),\r\n  commonStore: new CommonStore(),\r\n  userStore: new UserStore(),\r\n  modalStore: new ModalStore(),\r\n  profileStore: new ProfileStore(),\r\n  commentStore: new CommentStore(),\r\n};\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\nexport function useStore() {\r\n  return useContext(StoreContext);\r\n}\r\n","import { makeAutoObservable, reaction } from 'mobx';\r\nimport { ServerError } from './../model/serverError';\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem('jwt');\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem('jwt', token);\r\n        } else {\r\n          window.localStorage.removeItem('jwt');\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n  };\r\n\r\n  setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from 'mobx';\r\n\r\ninterface MOdal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\nexport default class ModalStore {\r\n  modal: MOdal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import { store } from './store';\r\nimport { makeAutoObservable, runInAction } from 'mobx';\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { ChatComment } from './../model/comment';\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = async (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + '?activityId=' + activityId, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n\r\n      this.hubConnection.start().catch((error) => console.error('Error establishing the connection: ', error));\r\n\r\n      this.hubConnection.on('LoadComments', (comments: ChatComment[]) => {\r\n        runInAction(() => {\r\n          comments.forEach((comment) => (comment.createdAt = new Date(comment.createdAt + 'Z')));\r\n          this.comments = comments;\r\n        });\r\n      });\r\n\r\n      this.hubConnection.on('RecievedComment', (comment: ChatComment) => {\r\n        runInAction(() => {\r\n          comment.createdAt = new Date(comment.createdAt);\r\n          this.comments.unshift(comment);\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection?.stop().catch((error) => console.error('Error stopping connection: ', error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke('SendComment', values);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\nfunction NavBar() {\r\n  const {\r\n    userStore: { user, logout },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Menu fixed='top' inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} to='/' exact>\r\n          <img src='/assets/logo.png' alt='logo' style={{ marginRight: 10 }} />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name='Activities' as={NavLink} to='/activities' />\r\n        <Menu.Item name='Errors' as={NavLink} to='/errors' />\r\n        <Menu.Item>\r\n          <Button positive content='Create Activity' as={NavLink} to='/createactivity' />\r\n        </Menu.Item>\r\n        <Menu.Item position='right'>\r\n          <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n\r\n          <Dropdown pointing='top left' text={user?.displayName}>\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item as={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user' />\r\n              <Dropdown.Item onClick={logout} text='Logout' icon='power' />\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Item>\r\n      </Container>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default observer(NavBar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { Header, Menu } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nexport default observer(function ActivityFilters() {\r\n  const {\r\n    activityStore: { predicate, setPredicate },\r\n  } = useStore();\r\n\r\n  return (\r\n    <>\r\n      <Menu vertical size='large' style={{ width: '100%', marginTop: 35 }}>\r\n        <Header icon='filter' attached color='teal' content='Filters' />\r\n        <Menu.Item content='All Activities' active={predicate.has('all')} onClick={() => setPredicate('all', 'true')} />\r\n        <Menu.Item\r\n          content=\"I'm going\"\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n        />\r\n        <Menu.Item\r\n          content=\"I'm hosting\"\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n        />\r\n      </Menu>\r\n      <Header />\r\n      <Calendar\r\n        onChange={(date) => setPredicate('startDate', date as Date)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent } from 'react';\r\nimport { Reveal, Button } from 'semantic-ui-react';\r\nimport { Profile } from 'src/app/model/profile';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following ? updateFollowing(username, false) : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated='move'>\r\n      <Reveal.Content visible style={{ width: '100%' }}>\r\n        <Button fluid color='teal' content={profile.following ? 'Following' : 'Not Following'} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: '100%' }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? 'red' : 'green'}\r\n          content={profile.following ? 'Unfollow' : 'Follow'}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n          loading={loading}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from 'src/app/model/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || '/assets/user.png'} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content>\r\n        <Icon name='user' />\r\n        {profile.followersCount} Followers\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from 'src/app/model/profile';\r\nimport ProfileCard from 'src/features/profiles/ProfileCard';\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default function ActivityListItemAttendee({ attendees }: Props) {\r\n  const styles = {\r\n    borderColor: 'orange',\r\n    borderWidth: 2,\r\n  };\r\n\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n              <Image\r\n                size='mini'\r\n                circular\r\n                src={attendee.image || '/assets/user.png'}\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }>\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Item, Icon, Button, Label } from 'semantic-ui-react';\r\nimport { Activity } from 'src/app/model/activity';\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nfunction ActivityListItem({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        {activity.isCancelled && (\r\n          <Label attached='top' color='red' content='Cancelled' style={{ textAlign: 'Center' }} />\r\n        )}\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              style={{ marginBottom: 3 }}\r\n              size='tiny'\r\n              circular\r\n              src={activity.host?.image || '/assets/user.png'}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By <Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='orange'>\r\n                    You are hosting this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label basic color='green'>\r\n                    You are going to this activity\r\n                  </Label>\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <span>\r\n          <Icon name='clock outline' /> {format(activity.date!, 'dd MMM yyyy h:mm aa')}\r\n          <Icon name='map marker alternate' /> {activity.venue}, {activity.city}\r\n        </span>\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendee attendees={activity.attendees!} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <Button floated='right' content='View' color='teal' as={Link} to={`/activities/${activity.id}`} />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityListItem);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Fragment } from 'react';\r\nimport { Header, Item } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\nfunction ActivityList() {\r\n  const { activityStore } = useStore();\r\n\r\n  const { groupedActivities } = activityStore;\r\n\r\n  return (\r\n    <>\r\n      {groupedActivities.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Header sub color='teal'>\r\n            {group}\r\n          </Header>\r\n\r\n          <Item.Group divided>\r\n            {activities.map((activity) => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityList);\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color='blue' floated='right' content='View' />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\nimport { Grid, Loader } from 'semantic-ui-react';\r\nimport { PagingParams } from 'src/app/model/pagination';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ActivityFilters from './ActivityFilters';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder';\r\n\r\nfunction ActivityDashboard() {\r\n  const { activityStore } = useStore();\r\n  const { loadActivities, activityRegistry, setPagingParams, pagination } = activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  function handleGetNext() {\r\n    setLoadingNext(true);\r\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (activityRegistry.size <= 1) loadActivities();\r\n  }, [loadActivities, activityRegistry.size]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {activityStore.loadingInitial && !loadingNext ? (\r\n          <>\r\n            <ActivityListItemPlaceholder />\r\n            <ActivityListItemPlaceholder />\r\n          </>\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n            initialLoad={false}>\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDashboard);\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Form, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from 'src/app/common/form/MyTextInput';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nexport default observer(function LoginForm() {\r\n  const {\r\n    userStore,\r\n    activityStore: { loadActivities },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .then(() => loadActivities())\r\n          .catch((error) => setErrors({ error: 'Invalid email for password' }))\r\n      }>\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className='ui form' onSubmit={handleSubmit}>\r\n          <Header as='h2' content='Login to Reactivities' color='teal' textAlign='center' />\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type='password' />\r\n          <ErrorMessage\r\n            name='error'\r\n            render={() => <Label style={{ marginBottom: 10 }} basic color='red' content={errors.error} />}\r\n          />\r\n          <Button positive content='login' type='submit' fluid loading={isSubmitting} />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationError({ errors }: Props) {\r\n  return (\r\n    <Message color='red'>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((error: any, i: any) => (\r\n            <Message.Item key={i}>{error}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Form, Header } from 'semantic-ui-react';\r\nimport MyTextInput from 'src/app/common/form/MyTextInput';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationError from '../errors/ValidationError';\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n\r\n  const validationSchema = Yup.object({\r\n    displayName: Yup.string().required(),\r\n    username: Yup.string().required(),\r\n    email: Yup.string().email().required(),\r\n    password: Yup.string().required(),\r\n  });\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: '', username: '', email: '', password: '', error: null }}\r\n      onSubmit={(values, { setErrors }) => userStore.register(values).catch((error) => setErrors({ error }))}\r\n      validationSchema={validationSchema}>\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form className='ui form error' onSubmit={handleSubmit}>\r\n          <Header as='h2' content='Sign up to Reactivities' color='teal' textAlign='center' />\r\n          <MyTextInput name='displayName' placeholder='Display Name' />\r\n          <MyTextInput name='username' placeholder='Username' />\r\n          <MyTextInput name='email' placeholder='Email' />\r\n          <MyTextInput name='password' placeholder='Password' type='password' />\r\n          <ErrorMessage name='error' render={() => <ValidationError errors={errors.error} />} />\r\n          <Button\r\n            positive\r\n            content='Register'\r\n            type='submit'\r\n            fluid\r\n            loading={isSubmitting}\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Container, Header, Button, Image } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport LoginForm from '../users/LoginForm';\r\nimport RegisterForm from '../users/RegisterForm';\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n\r\n  return (\r\n    <Segment inverted textAlign='center' vertical className='masthead'>\r\n      <Container text>\r\n        <Header as='h1' inverted>\r\n          <Image size='massive' src='/assets/logo.png' alt='logo' style={{ marginBottom: 12 }} />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as='h2' inverted content='Welcome to Reactivities' />\r\n            <Button as={Link} to='/activities' size='huge' inverted>\r\n              Go to activities\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button onClick={() => modalStore.openModal(<LoginForm />)} size='huge' inverted>\r\n              Login!\r\n            </Button>\r\n            <Button onClick={() => modalStore.openModal(<RegisterForm />)} size='huge' inverted>\r\n              Register\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nexport default function MyTextInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MySelectInput(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from 'formik';\r\nimport React from 'react';\r\nimport { Form, Label } from 'semantic-ui-react';\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color='red'>\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: 'Drinks', value: 'drinks' },\r\n  { text: 'Culture', value: 'culture' },\r\n  { text: 'Film', value: 'film' },\r\n  { text: 'Food', value: 'food' },\r\n  { text: 'Music', value: 'music' },\r\n  { text: 'Travel', value: 'travel' },\r\n];\r\n","import React from 'react';\r\nimport { Dimmer, Loader } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  inverted?: boolean;\r\n  content?: string;\r\n}\r\n\r\nexport default function LoadingComponent({ inverted = true, content }: Props) {\r\n  return (\r\n    <Dimmer active inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n}\r\n","import { Formik, Form } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport { history } from 'src';\r\nimport MyDateInput from 'src/app/common/form/MyDateInput';\r\nimport MySelectInput from 'src/app/common/form/MySelectInput';\r\nimport MyTextArea from 'src/app/common/form/MyTextArea';\r\nimport MyTextInput from 'src/app/common/form/MyTextInput';\r\nimport { categoryOptions } from 'src/app/common/options/categoryOptions';\r\nimport LoadingComponent from 'src/app/layout/LoadingComponent';\r\nimport { ActivityFormValues } from 'src/app/model/activity';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport { v4 as uuid } from 'uuid';\r\nimport * as Yup from 'yup';\r\n\r\nexport default observer(function ActivityForm() {\r\n  const { activityStore } = useStore();\r\n  const { createActivity, updateActivity, loadActivity, loadingInitial } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  const [activity, setActivity] = useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(),\r\n    description: Yup.string().required(),\r\n    category: Yup.string().required(),\r\n    date: Yup.string().required('date is required').nullable(),\r\n    venue: Yup.string().required(),\r\n    city: Yup.string().required(),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id) loadActivity(id).then((activity) => setActivity(new ActivityFormValues(activity)));\r\n  }, [id, loadActivity]);\r\n\r\n  function handleFormSubmit(activity: ActivityFormValues) {\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity).then(() => history.push(`/activities/${newActivity.id}`));\r\n    } else {\r\n      updateActivity(activity).then(() => history.push(`/activities/${activity.id}`));\r\n    }\r\n  }\r\n\r\n  if (loadingInitial) return <LoadingComponent content='loading activity...' />;\r\n\r\n  return (\r\n    <Segment clearing>\r\n      <Header sub content='Activity Details' color='teal' />\r\n      <Formik\r\n        enableReinitialize\r\n        initialValues={activity}\r\n        onSubmit={(values) => handleFormSubmit(values)}\r\n        validationSchema={validationSchema}>\r\n        {({ handleSubmit, isValid, dirty, isSubmitting }) => (\r\n          <Form onSubmit={handleSubmit} autoComplete='off' className='ui form'>\r\n            <MyTextInput name='title' placeholder='Title' />\r\n            <MyTextArea rows={3} placeholder='Description' name='description' />\r\n            <MySelectInput placeholder='Category' name='category' options={categoryOptions} />\r\n            <MyDateInput\r\n              placeholderText='Date'\r\n              name='date'\r\n              showTimeSelect\r\n              timeCaption='time'\r\n              dateFormat='MMMM d, yyyy h:mm aa'\r\n            />\r\n            <Header sub content='Location Details' color='teal' />\r\n            <MyTextInput placeholder='City' name='city' />\r\n            <MyTextInput placeholder='Venue' name='venue' />\r\n            <Button\r\n              loading={isSubmitting}\r\n              floated='right'\r\n              positive\r\n              type='submit'\r\n              content='Submit'\r\n              disabled={isSubmitting || !dirty || !isValid}\r\n            />\r\n            <Button\r\n              as={Link}\r\n              to={activity.id ? `/activities/${activity.id}` : '/activities'}\r\n              floated='right'\r\n              type='button'\r\n              content='Cancel'\r\n            />\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Segment>\r\n  );\r\n});\r\n","import { format } from 'date-fns/esm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Item, Header, Button, Image, Label } from 'semantic-ui-react';\r\nimport { Activity } from 'src/app/model/activity';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nconst activityImageStyle = {\r\n  filter: 'brightness(30%)',\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: 'absolute',\r\n  bottom: '5%',\r\n  left: '5%',\r\n  width: '100%',\r\n  height: 'auto',\r\n  color: 'white',\r\n};\r\n\r\nfunction ActivityDetailHeader({ activity }: Props) {\r\n  const {\r\n    activityStore: { updateAttendance, cancelActivityToggle, loading },\r\n  } = useStore();\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached='top' style={{ padding: '0' }}>\r\n        {activity.isCancelled && (\r\n          <Label\r\n            style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n            ribbon\r\n            color='red'\r\n            content='Cancelled'\r\n          />\r\n        )}\r\n        <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle} />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header size='huge' content={activity.title} style={{ color: 'white' }} />\r\n                <p>{format(activity.date!, 'dd MMM yyyy')}</p>\r\n                <p>\r\n                  Hosted by{' '}\r\n                  <strong>\r\n                    <Link to={`/profile/${activity.host?.username}`}>{activity.host?.displayName}</Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached='bottom'>\r\n        {activity.isHost ? (\r\n          <>\r\n            <Button\r\n              color={activity.isCancelled ? 'green' : 'red'}\r\n              basic\r\n              onClick={cancelActivityToggle}\r\n              loading={loading}>\r\n              {activity.isCancelled ? 'Re-activate Activity' : 'Cancel Activity'}\r\n            </Button>\r\n            <Button\r\n              as={Link}\r\n              to={`/manage/${activity.id}`}\r\n              color='orange'\r\n              floated='right'\r\n              disabled={activity.isCancelled}>\r\n              Manage Event\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <Button\r\n            onClick={updateAttendance}\r\n            loading={loading}\r\n            color={!activity.isGoing ? 'teal' : 'grey'}\r\n            disabled={activity.isCancelled}>\r\n            {activity.isGoing ? 'Cancel attendance' : 'Join Activity'}\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetailHeader);\r\n","import { format } from 'date-fns/esm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Segment, Grid, Icon } from 'semantic-ui-react';\r\nimport { Activity } from 'src/app/model/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nfunction ActivityDetailInfo({ activity }: Props) {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached='top'>\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size='large' color='teal' name='info' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='calendar' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>{format(activity.date!, 'dd MMM yyyy h:mm aa')}</span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign='middle'>\r\n          <Grid.Column width={1}>\r\n            <Icon name='marker' size='large' color='teal' />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetailInfo);\r\n","import { formatDistanceToNow } from 'date-fns';\r\nimport { Formik, Form, Field, FieldProps } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Comment, Loader } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  activityId: string;\r\n}\r\n\r\nfunction ActivityDetailChat({ activityId }: Props) {\r\n  const { commentStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (activityId) {\r\n      commentStore.createHubConnection(activityId);\r\n    }\r\n\r\n    return () => {\r\n      commentStore.stopHubConnection();\r\n    };\r\n  }, [activityId, commentStore]);\r\n\r\n  return (\r\n    <>\r\n      <Segment textAlign='center' attached='top' inverted color='teal' style={{ border: 'none' }}>\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached clearing>\r\n        <Formik\r\n          onSubmit={(values, { resetForm }) => commentStore.addComment(values).then(() => resetForm())}\r\n          initialValues={{ body: '' }}\r\n          validationSchema={Yup.object({ body: Yup.string().required() })}>\r\n          {({ isSubmitting, isValid, handleSubmit }) => (\r\n            <Form className='ui form'>\r\n              <Field name='body'>\r\n                {(props: FieldProps) => (\r\n                  <div style={{ position: 'relative' }}>\r\n                    <Loader active={isSubmitting} />\r\n                    <textarea\r\n                      placeholder='Enter your comment (Enter to submit, SHIFT + Enter for new line)'\r\n                      rows={2}\r\n                      {...props.field}\r\n                      onKeyPress={(e) => {\r\n                        if (e.key === 'Enter' && e.shiftKey) {\r\n                          return;\r\n                        }\r\n                        if (e.key === 'Enter' && !e.shiftKey) {\r\n                          e.preventDefault();\r\n                          isValid && handleSubmit();\r\n                        }\r\n                      }}\r\n                    />\r\n                  </div>\r\n                )}\r\n              </Field>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Comment.Group>\r\n          {commentStore.comments.map((comment) => (\r\n            <Comment key={comment.id}>\r\n              <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n              <Comment.Content>\r\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\r\n                  {comment.displayName}\r\n                </Comment.Author>\r\n                <Comment.Metadata>\r\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\r\n                </Comment.Metadata>\r\n                <Comment.Text style={{ whiteSpace: 'pre-wrap' }}>{comment.body}</Comment.Text>\r\n              </Comment.Content>\r\n            </Comment>\r\n          ))}\r\n        </Comment.Group>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetailChat);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, List, Item, Label, Image } from 'semantic-ui-react';\r\nimport { Activity } from 'src/app/model/activity';\r\n\r\ninterface Props {\r\n  activity: Activity;\r\n}\r\n\r\nfunction ActivityDetailSidebar({ activity: { attendees, host } }: Props) {\r\n  return (\r\n    <>\r\n      <Segment textAlign='center' style={{ border: 'none' }} attached='top' secondary inverted color='teal'>\r\n        {attendees?.length} {attendees?.length === 1 ? 'Person' : 'People'} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees?.map((attendee) => (\r\n            <Item style={{ position: 'relative' }} key={attendee.username}>\r\n              {host?.username === attendee.username && (\r\n                <Label style={{ position: 'absolute' }} color='orange' ribbon='right'>\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Item.Header as='h3'>\r\n                  <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                </Item.Header>\r\n                {attendee.following && <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetailSidebar);\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { useParams } from 'react-router';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponent';\r\nimport ActivityDetailHeader from './ActivityDetailHeader';\r\nimport ActivityDetailInfo from './ActivityDetailInfo';\r\nimport ActivityDetailChat from './ActivityDetailChat';\r\nimport ActivityDetailSidebar from './ActivityDetailSidebar';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nfunction ActivityDetails() {\r\n  const { activityStore } = useStore();\r\n  const { selectedActivity: activity, loadActivity, loadingInitial, clearActivity } = activityStore;\r\n  const { id } = useParams<{ id: string }>();\r\n\r\n  useEffect(() => {\r\n    loadActivity(id);\r\n    return () => clearActivity();\r\n  }, [id, loadActivity, clearActivity]);\r\n\r\n  if (loadingInitial) return <LoadingComponent content='loading activity...' />;\r\n\r\n  if (!activity) return <h1>Activity Not Found</h1>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailHeader activity={activity} />\r\n        <ActivityDetailInfo activity={activity} />\r\n        <ActivityDetailChat activityId={activity.id} />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailSidebar activity={activity} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default observer(ActivityDetails);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name='search' />\r\n        Oops - we've looked everywhere but couldn't find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to='/activities' primary>\r\n          Return to Activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport axios from 'axios';\r\nimport ValidationError from './ValidationError';\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios.get(baseUrl + 'buggy/not-found').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios.get(baseUrl + 'buggy/bad-request').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios.get(baseUrl + 'buggy/server-error').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios.get(baseUrl + 'buggy/unauthorised').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios.get(baseUrl + 'activities/notaguid').catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + 'activities', {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as='h1' content='Test Error component' />\r\n      <Segment>\r\n        <Button.Group widths='7'>\r\n          <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n          <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n          <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n          <Button onClick={handleServerError} content='Server Error' basic primary />\r\n          <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n          <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationError errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n\r\n  return (\r\n    <Container>\r\n      <Header as='h1' content='Server Error' />\r\n      <Header as='h5' color='red' content={commonStore.error?.message.toUpperCase()} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as='h4' content='Stack trace' color='teal' />\r\n          <code style={{ marginTop: 10 }}>{commonStore.error?.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n  return (\r\n    <Modal open={modalStore.modal.open} onClose={() => modalStore.closeModal()} size='mini'>\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport MyTextArea from 'src/app/common/form/MyTextArea';\r\nimport MyTextInput from 'src/app/common/form/MyTextInput';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n  setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => setEditMode(false));\r\n      }}\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      validationSchema={Yup.object({ displayName: Yup.string().required() })}>\r\n      {({ handleSubmit, isValid, dirty, isSubmitting }) => (\r\n        <Form className='ui form' onSubmit={handleSubmit}>\r\n          <MyTextInput placeholder='Enter Display Name' name='displayName' />\r\n          <MyTextArea placeholder='Enter Bio Information' name='bio' rows={4} />\r\n          <Button\r\n            type='submit'\r\n            content='Update Profile'\r\n            positive\r\n            disabled={!isValid || !dirty}\r\n            loading={isSubmitting}\r\n            floated='right'\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useState } from 'react';\r\nimport { Button, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ProfileEditForm from './ProfileEditForm';\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header icon='user' content={`About ${profile?.displayName}`} floated='left' />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated='right'\r\n              basic\r\n              content={editMode ? 'Cancel' : 'Edit Profile'}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <div style={{ whiteSpace: 'pre-wrap' }}>{profile?.bio}</div>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Grid, Header, Tab, TabProps, Image } from 'semantic-ui-react';\r\nimport { UserActivity } from 'src/app/model/profile';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'future' } },\r\n  { menuItem: 'Past Events', pane: { key: 'past' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosting' } },\r\n];\r\n\r\nexport default observer(function ProfileActivities() {\r\n  const {\r\n    profileStore: { loadActivities, profile, loading, userActivities },\r\n  } = useStore();\r\n\r\n  useEffect(() => {\r\n    loadActivities(profile!.username);\r\n  }, [loadActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadActivities(profile!.username, panes[data.activeIndex as number].pane.key);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loading}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header content='Activities' as='h2' icon='calendar' floated='left' />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            menu={{ secondary: true, pointing: true }}\r\n            panes={panes}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card as={Link} to={`/activities/${activity.id}`} key={activity.id}>\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowing() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowing, activeTab } = profileStore;\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingFollowing}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated='left'\r\n            icon='user'\r\n            content={\r\n              activeTab === 3 ? `People Following ${profile?.displayName}` : `People ${profile?.displayName} Following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({ imagePreview, setCropper }: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview='.img-preview'\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Header, Icon } from 'semantic-ui-react';\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: 'dashed 3px #eee',\r\n    borderColor: '#eee',\r\n    borderRadius: '5px',\r\n    paddingTop: '30px',\r\n    textAlign: 'center' as 'center',\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColr: 'green',\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(acceptedFiles.map((file: any) => Object.assign(file, { preview: URL.createObjectURL(file) })));\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div {...getRootProps()} style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}>\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Grid, Header } from 'semantic-ui-react';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ uploadPhoto, loading }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => {\r\n        URL.revokeObjectURL(file.preview);\r\n      });\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color='teal' content='Step 1 - Add Photo' />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color='teal' content='Step 2 - Resize Image' />\r\n        {files && files.length > 0 && <PhotoWidgetCropper setCropper={setCropper} imagePreview={files[0].preview} />}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div className='img-preview' style={{ minHeight: 200, overflow: 'hidden' }} />\r\n            <Button.Group widths={2}>\r\n              <Button onClick={onCrop} positive icon='check' loading={loading} />\r\n              <Button onClick={() => setFiles([])} icon='close' />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { SyntheticEvent, useState } from 'react';\r\nimport { Button, Card, Grid, Header, Image, Tab } from 'semantic-ui-react';\r\nimport PhotoUploadWidget from 'src/app/common/imageUpload/PhotoUploadWidget';\r\nimport { Photo, Profile } from 'src/app/model/profile';\r\nimport { useStore } from 'src/app/stores/store';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: { isCurrentUser, uploadPhoto, uploading, setMainPhoto, deletePhoto, loading, deleting },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState('');\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n  function handleDeletePhoto(photo: Photo, e: SyntheticEvent<HTMLButtonElement>) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo.id);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header icon='image' content='Photos' floated='left' />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated='right'\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading} />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url || `/assets/user.png`} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color='green'\r\n                        content='Main'\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        loading={target === photo.id && loading}\r\n                        name={photo.id}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color='red'\r\n                        icon='trash'\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                        disabled={photo.isMain}\r\n                        loading={target === photo.id && deleting}\r\n                        name={photo.id}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from 'src/app/model/profile';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileActivities from './ProfileActivities';\r\nimport ProfileFollowing from './ProfileFollowing';\r\nimport ProfilePhotos from './ProfilePhotos';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n\r\n  const panes = [\r\n    { menuItem: 'About', render: () => <ProfileAbout /> },\r\n    { menuItem: 'Photos', render: () => <ProfilePhotos profile={profile} /> },\r\n    { menuItem: 'Events', render: () => <ProfileActivities /> },\r\n    { menuItem: 'Followers', render: () => <ProfileFollowing /> },\r\n    { menuItem: 'Following', render: () => <ProfileFollowing /> },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition='right'\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Grid, Segment, Item, Header, Statistic, Divider } from 'semantic-ui-react';\r\nimport { Profile } from 'src/app/model/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image avatar size='small' src={profile.image || `/assets/user.png`} />\r\n              <Item.Content verticalAlign='middle'>\r\n                <Header as='h1' content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group>\r\n            <Statistic label='Followers' value={profile.followersCount} />\r\n            <Statistic label='Following' value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from 'src/app/layout/LoadingComponent';\r\nimport { useStore } from 'src/app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, profile, loadProfile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => setActiveTab(0);\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content='loading profile...' />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from 'react-router';\r\nimport { useStore } from '../stores/store';\r\n\r\ninterface Props extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n  return <Route {...rest} render={(props) => (isLoggedIn ? <Component {...props} /> : <Redirect to='/' />)} />;\r\n}\r\n","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch } from 'react-router-dom';\nimport { useLocation } from 'react-router';\nimport HomePage from '../../features/home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport NotFound from '../../features/errors/NotFound';\nimport { ToastContainer } from 'react-toastify';\nimport TestErrors from 'src/features/errors/TestError';\nimport ServerError from 'src/features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponent';\nimport ModalContainer from '../common/modal/ModalContainer';\nimport ProfilePage from 'src/features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [userStore, commonStore]);\n\n  if (!commonStore.appLoaded) return <LoadingComponent content='Loading app...' />;\n  return (\n    <>\n      <ToastContainer position='bottom-right' hideProgressBar />\n      <ModalContainer />\n      <Route exact path='/' component={HomePage} />\n      <Route\n        path={'/(.+)'}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ paddingTop: '7em' }}>\n              <Switch>\n                <PrivateRoute path='/activities' component={ActivityDashboard} exact />\n                <PrivateRoute path='/activities/:id' component={ActivityDetails} />\n                <PrivateRoute path={['/createActivity', '/manage/:id']} component={ActivityForm} key={location.key} />\n                <PrivateRoute path='/profiles/:username' component={ProfilePage} />\n                <PrivateRoute path='/errors' component={TestErrors} />\n                <Route path='/server-error' component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from 'react';\r\nimport { useLocation, withRouter } from 'react-router-dom';\r\n\r\nconst ScrollToTop = () => {\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport 'react-calendar/dist/Calendar.css';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport './app/layout/styles.css';\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { createBrowserHistory } from 'history';\nimport { store, StoreContext } from './app/stores/store';\nimport { Router } from 'react-router-dom';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop />\n    <StoreContext.Provider value={store}>\n      <App />\n    </StoreContext.Provider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}